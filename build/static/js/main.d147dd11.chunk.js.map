{"version":3,"sources":["App/logo.svg","services/notification-service.js","services/data-service.js","product/product.js","product-condensed/product-condensed.js","wishlist/wishlist.js","App/App.js","services/http-service.js","serviceWorker.js","index.js"],"names":["module","exports","observers","instance","NotificationService","postNotification","notifName","data","obs","x","length","callBack","removeObserver","observer","splice","console","log","addObserver","obj","push","this","ns","wishList","DataService","itemOnWishList","item","_id","addWishListItem","removeWishListItem","ds","Product","props","onButtonClicked","state","onWishList","product","bind","onWishListChanged","newWishList","setState","btnClass","className","src","imgUrl","alt","title","price","href","onClick","Component","ProductCondensed","removeProduct","WishList","createWishList","map","key","http","getProducts","Promise","resolve","reject","fetch","then","response","json","App","loadData","self","products","err","productList","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d147dd11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export const NOTIF_WISHLIST_CHANGED = \"notif_wishlist_changed\";\r\n\r\n\r\nvar observers = {}; //[;\r\n    // \"wishListChanged\": [{observer:someComponent, callBack: someFunction},{observer: someOtherComponent}]\r\n    // \"userHasLoggedIn\": [{observer:someOtherComponent}]\r\n\r\nlet instance = null;\r\n\r\nclass NotificationService {\r\n    constructor() {\r\n        if(!instance) {\r\n            instance = this;\r\n        }\r\n        \r\n        return instance;\r\n    }\r\n    \r\n    postNotification = (notifName, data) => {\r\n        let obs = observers[notifName];\r\n        for(var x = 0; x < obs.length; x++) {\r\n            var obj = obs[x];\r\n            obj.callBack(data);\r\n        }\r\n    }\r\n\r\n    removeObserver = (observer, notifName) => {\r\n        let obs = observers[notifName];\r\n\r\n        if(obs) {\r\n            for(var x = 0; x < obs.length; x++) {\r\n                if(observer === obs[x].observer) {\r\n                    obs.splice(x,1);\r\n                    observers[notifName] = obs;\r\n                    console.log(\"observer removed\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addObserver = (notifName, observer, callBack) => {\r\n        let obs = observers[notifName];\r\n\r\n        if(!obs) {\r\n            observers[notifName] = [];\r\n        }\r\n\r\n        let obj = {observer: observer, callBack: callBack};\r\n        observers[notifName].push(obj);\r\n        console.log(\"observer added\");\r\n    }\r\n}\r\n\r\nexport default NotificationService;","import NotificationService, {NOTIF_WISHLIST_CHANGED} from \"./notification-service\";\r\n\r\nlet ns = new NotificationService();\r\n\r\nlet instance = null;\r\nvar wishList = [];\r\n\r\n\r\nclass DataService {\r\n    constructor() {\r\n        if(!instance) {\r\n            instance = this;\r\n        }\r\n        \r\n        return instance;\r\n    }\r\n    \r\n    itemOnWishList  = item => {\r\n        for(var x = 0; x < wishList.length; x++) {\r\n            if(wishList[x]._id === item._id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    addWishListItem = item => {\r\n        wishList.push(item);\r\n        //alert(\"item added\");                      ///alert will make the application look murky avoid it\r\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n    }\r\n    \r\n    removeWishListItem = item => {\r\n        for (var x = 0; x < wishList.length; x++) {\r\n            if(wishList[x]._id === item._id) {\r\n                wishList.splice(x, 1);  \r\n                //alert(\"item removed\");\r\n                console.log(\"item removed\");\r\n                ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataService;","import React, { Component } from 'react';\r\nimport './product.css';\r\n\r\nimport DataService from '../services/data-service';\r\nimport NotificationService,{NOTIF_WISHLIST_CHANGED} from \"../services/notification-service\";\r\n\r\nlet ds = new DataService();\r\nlet ns = new NotificationService();\r\n\r\nclass Product extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {onWishList: ds.itemOnWishList()};\r\n        \r\n        this.onButtonClicked = this.onButtonClicked.bind(this);\r\n        this.onWishListChanged = this.onWishListChanged.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        ns.removeObserver(this, NOTIF_WISHLIST_CHANGED);\r\n    }\r\n    \r\n    onWishListChanged(newWishList) {\r\n        this.setState({onWishList: ds.itemOnWishList(this.props.product)});   \r\n    }\r\n    \r\n    onButtonClicked = () => {\r\n        if(this.state.onWishList) {\r\n            ds.removeWishListItem(this.props.product);\r\n        }\r\n        else {\r\n        ds.addWishListItem(this.props.product);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        var btnClass;\r\n        \r\n        if (this.state.onWishList) {\r\n            btnClass = \"btn btn-danger\";\r\n        }\r\n        else {\r\n            btnClass = \"btn btn-primary\";\r\n        }\r\n        \r\n        return (\r\n            <div className=\"card product\">\r\n                <img className=\"card-img-top\" src={this.props.product.imgUrl} alt=\"Product\"></img>\r\n                <div className=\"card-block\">\r\n                    <h4 className=\"card-title\">{this.props.product.title}</h4>\r\n                    <p className=\"card-text\">Price: ${this.props.product.price}</p>\r\n                    <a href=\"#wishlist\" onClick={() => this.onButtonClicked()} className={btnClass}>{this.state.onWishList ? \"Remove from WishList\" : \"Add to WishList\"}</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product;","import React, { Component } from 'react';\r\nimport './product-condensed.css';\r\n\r\nimport DataService from '../services/data-service';\r\n\r\nlet ds = new DataService();\r\n\r\nclass ProductCondensed extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.removeProduct = this.removeProduct.bind(this);\r\n    }\r\n    \r\n    removeProduct = () => {\r\n        ds.removeWishListItem(this.props.product);\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <li className=\"list-group-item pc-condensed\">\r\n                <a className=\"btn btn-outline-danger\" onClick={() => this.removeProduct()}>X</a>\r\n                <p>{this.props.product.title} |  <b>${this.props.product.price}</b></p>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductCondensed;","import React, { Component } from 'react';\r\nimport './wishlist.css';\r\n\r\nimport DataService from \"../services/data-service.js\";\r\n\r\nimport NotificationService, {NOTIF_WISHLIST_CHANGED} from \"../services/notification-service.js\";\r\n\r\nimport ProductCondensed from \"../product-condensed/product-condensed\";\r\n\r\n\r\n\r\n\r\nlet ns = new NotificationService();\r\n\r\nclass WishList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {wishList:[]};\r\n        \r\n        //}}}}}}}}}}}}}\r\n        this.createWishList = this.createWishList.bind(this);\r\n        \r\n        this.onWishListChanged = this.onWishListChanged.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        ns.removeObserver(this, NOTIF_WISHLIST_CHANGED);\r\n    }\r\n    \r\n    onWishListChanged(newWishList) {\r\n        this.setState({wishList: newWishList});\r\n    }\r\n    \r\n    createWishList = () => {\r\n        const list = this.state.wishList.map((product) => \r\n            <ProductCondensed product={product} key={product._id} />                \r\n        );\r\n                                             \r\n        return (list);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"card custom-card\">\r\n                <div className=\"card-block\">\r\n                    <h4 className=\"card-title\">Wish List</h4>\r\n                    <ul className=\"list-group\">\r\n                        {this.createWishList()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WishList;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n//Components\r\nimport Product from '../product/product';\r\nimport WishList from '../wishlist/wishlist';\r\n\r\n//services\r\nimport HttpService from '../services/http-service';\r\n\r\n//function App() {\r\n//  return (\r\n//    <div className=\"App\">\r\n//      <header className=\"App-header\">\r\n//          \r\n//        <p>Welcome to Swag Shop</p>\r\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//          \r\n//        <p>\r\n//          Edit <code>src/App.js</code> and save to reload.\r\n//        </p>\r\n//        <a\r\n//          className=\"App-link\"\r\n//          href=\"https://reactjs.org\"\r\n//          target=\"_blank\"\r\n//          rel=\"noopener noreferrer\"\r\n//        >\r\n//          Learn React\r\n//        </a>\r\n//      </header>\r\n//    </div>\r\n//  );\r\n//}\r\n\r\nconst http = new HttpService();\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {products:[]};\r\n        \r\n        //################\r\n        this.loadData = this.loadData.bind(this);\r\n        this.productList = this.productList.bind(this);\r\n        \r\n        \r\n        this.loadData();\r\n    }\r\n\r\n    loadData = () => {\r\n        var self = this;\r\n        http.getProducts().then(data => {\r\n            self.setState({products: data})\r\n        },err => {\r\n            console.log(\"there is an error\");\r\n        });\r\n    }\r\n    \r\n    productList = () => {\r\n        const list = this.state.products.map((product) => \r\n                                             \r\n            <div className=\"col-sm-4\" key={product._id}>\r\n                <Product product={product}/>\r\n            </div>\r\n        );\r\n        return (list);\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n\r\n            <p>Welcome to Swag Shop</p>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <div className=\"container-fluid App-main\">\r\n               <div className=\"row\">\r\n                  <div className=\"col-sm-8\">\r\n                     <div className=\"row\">\r\n                          {this.productList()}\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"col-sm-4\">\r\n                      <WishList />\r\n                  </div>    \r\n               </div>\r\n                \r\n            </div>\r\n            \r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//         <p>\r\n//              Edit <code>src/App.js</code> and save to reload.\r\n//            </p>\r\n//            <a\r\n//              className=\"App-link\"\r\n//              href=\"https://reactjs.org\"\r\n//              target=\"_blank\"\r\n//              rel=\"noopener noreferrer\"\r\n//            >\r\n//              Learn React\r\n//            </a>\r\n\r\n\r\n//<Product className=\"col-sm-4\" price=\"4.23\" title=\"Cool Toy Gun\" imgUrl=\"https://rukminim1.flixcart.com/image/612/612/j5mrxjk0/toy-weapon/f/x/h/kids-hot-fire-soft-bullet-toy-gun7643-m-original-imaew92y2nksx6ad.jpeg?q=70\"/>\r\n//                   <Product className=\"col-sm-4\" price=\"4.23\" title=\"Cool Toy Gun\" imgUrl=\"https://rukminim1.flixcart.com/image/612/612/j5mrxjk0/toy-weapon/f/x/h/kids-hot-fire-soft-bullet-toy-gun7643-m-original-imaew92y2nksx6ad.jpeg?q=70\"/>\r\n//                   <Product className=\"col-sm-4\" price=\"4.23\" title=\"Cool Toy Gun\" imgUrl=\"https://rukminim1.flixcart.com/image/612/612/j5mrxjk0/toy-weapon/f/x/h/kids-hot-fire-soft-bullet-toy-gun7643-m-original-imaew92y2nksx6ad.jpeg?q=70\"/>\r\n","import 'whatwg-fetch';\r\n\r\nclass HttpService {\r\n \r\n    getProducts = () => {\r\n    //1\r\n        var promise = new Promise((resolve, reject) => {\r\n            //2\r\n            fetch('http://localhost:3001/product').then(response => {\r\n            //4\r\n            resolve(response.json());            \r\n        })\r\n    });\r\n    \r\n    //3\r\n    return promise;\r\n    }     \r\n}\r\n\r\nexport default HttpService;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}